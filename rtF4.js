/*FSCSS execution functions using high quantity jsRegex with low normal javascript properties and functions. Readable FSCSS execution script. Credit "Figsh the publisher, David-Hux the writer, and your salf the user". Website "fscss-ttr on dev.to, Figsh on ekumedia.netlify.app / on codepen.io / on stackoverflow.com. this is not the complete working FSCSS script, try and use fscss from npm package ( npm install fscss) or using it CDN. Edited on 11:29pm Tue Jun 17 2025. version updated on /\/ source v6, package v1 up. please don't copy this script and don't use this link without using it directly from the fscss npm package or cdns, if you don't understand contact us on Facebook(exFSCSS)*/function repeatString(str,count){str=str.replace(/^['"]|['"]$/g,'');return str.repeat(Math.max(0,parseInt(count)))}function replaceRe(css){const reRegex=/re\(([^:]*)(?::\s*|\,\s*)(?:i\:?\s*)?(?:"([^"]*)"|'([^']*)')\)([^}]*)(\1)([^}]*)/gi;let newCss=css,previousCss='',iterations=0,maxIterations=1000;while(newCss!==previousCss&&iterations<maxIterations){previousCss=newCss;newCss=newCss.replace(reRegex,(match,selector,doubleQuoted,singleQuoted,before,repeatedSelector,after)=>`${before}${doubleQuoted||singleQuoted}${after}`);iterations++}if(iterations>=maxIterations){console.warn('Maximum iterations reached in replaceRe. Possible malformed CSS.')}return newCss}function processStyles(){const styleElements=document.querySelectorAll('style');if(!styleElements.length){console.warn('No <style> elements found.');return}styleElements.forEach(element=>{let css=element.innerHTML;css=css.replace(/(?:mxs|\$p)\((([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,\s*)?("([^"]*)"|'([^']*)')\)/gi,`$2:$14$15;$4:$14$15;$6:$14$15;$8:$14$15;$10:$14$15;$12:$14$15;`).replace(/(?:mx|\$m)\((([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,\s*)?("([^"]*)"|'([^']*)')\)/gi,`$2$14$15$4$14$15$6$14$15$8$14$15$10$14$15$12$14$15`).replace(/rpt\((\d+)\,\s*("([^"]*)"|'([^']*)')\)/gi,(match,count,quotedStr,doubleQuoted,singleQuoted)=>repeatString(quotedStr,count)).replace(/\$(([\_\-\d\w]+)\:(\"[^\"]*\"|\'[^\']*\'|[^\;]*)\;)/gi,`:root{--$1}`).replace(/\$([^\!\s]+)!/gi,`var(--$1)`).replace(/\$([\w\-\_\d]+)/gi,`var(--$1)`).replace(/\-\*\-(([^\:]+)\:(\"[^\"]*\"|\'[^\']*\'|[^\;]*)\;)/gi,`-webkit-$1-moz-$1-ms-$1-o-$1`).replace(/%i\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$21$4$21$6$21$8$21$10$21$12$21$14$21$16$21$18$21$20$21`).replace(/%6\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$13$4$13$6$13$8$13$10$13$12$13`).replace(/%5\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$11$4$11$6$11$8$11$10$11`).replace(/%4\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$9$4$9$6$9$8$9`).replace(/%3\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$7$4$7$6$7`).replace(/%2\((([^\,\[\]]*)\,)?(([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$5$4$5`).replace(/%1\((([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,`$2$3`).replace(/@import\(\s*\exec\((.*)(.{5})\)\s*\)/gi,`@import url("$1css")`).replace(/\$\(\s*@keyframes\s*(\S+)\)/gi,`$1{animation-name:$1;}@keyframes $1`).replace(/\$\(\s*(\@[\w\-\*]*)\s*([^\{\}\,&]*)(\s*,\s*[^\{\}&]*)?&?(\[([^\{\}]*)\])?\s*\)/gi,`$2$3{animation:$2 $5;}$1 $2`).replace(/\$\(\s*--([^\{\}]*)\)/gi,`$1`).replace(/\$\(([^\:]*):\s*([^\)\:]*)\)/gi,`[$1='$2']`).replace(/g\(([^"'\,]*)\,\s*(("([^"]*)"|'([^']*)')\,\s*)?("([^"]*)"|'([^']*)')\s*\)/gi,`$1 $4$5$1 $7$8`).replace(/\$\(([^\:]*):\s*([^\)\:]*)\)/gi,`[$1='$2']`).replace(/\$\(([^\:^\)]*)\)/gi,`[$1]`);css=replaceRe(css);element.innerHTML=css})}function processDrawElements(){const drawElements=document.querySelectorAll('.draw');drawElements.forEach(element=>{const currentColor=element.style.color||'#000';element.style.color='transparent';element.style.webkitTextStroke=`2px ${currentColor}`})}try{processStyles();processDrawElements()}catch(error){console.error('Error processing styles or draw elements:',error)}
