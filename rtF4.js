function procNum(css){const regex=/num\((.*?)\)/g;function evaluateExpression(expression){try{return eval(expression)}catch(e){return console.error("Invalid expression:",expression),expression}}const processedCSS=css.replace(regex,((e,n)=>evaluateExpression(n)));return processedCSS}const arraysExfscss={},orderedxFscssRandom={},exfMAX_DEPTH=10;function extractBlock(e,n){let r=0,s=n;for(;s<e.length&&("{"===e[s]?r++:"}"===e[s]&&r--,0!==r);)s++;return e.slice(n,s+1)}function parseConditionBlocks(e){const n=[],r=/(if|el-if|el)\s*([^{}]*?)\s*\{([\s\S]*?)\}/g;let s;for(;null!==(s=r.exec(e));)n.push({type:s[1],condition:s[2].trim(),block:s[3].trim()});return n}function procExC(e){let n="";const r=e.replace(/exec\((_log|_error|_warn|_info),\s*(?:"([^"]*)"|'([^']*)'|([^)]*))\)/g,((e,r,s,t,o)=>{const c=s||t||o;return["_log","_error","_warn","_info"].includes(r)?c?(n+=`console.${r.slice(1)}("${c.replace(/"/g,'\\"')}");\n`,""):(console.warn(`fscss[exec(console)]: Empty argument for method: ${r}`),""):(console.warn(`fscss[exec(console)]: Unsupported method: ${r}`),"")}));if(n)try{new Function(n)()}catch(e){console.error("fscss[exec(console)]: Error executing transformed code:",e)}return r}function procEv(e){const n={},r=/@event\s+([\w-]+)\(([^)]*)\)\s*:?{/g;let s,t=e;const o=[];for(;null!==(s=r.exec(e));){const r=s[1],t=s[2],c=s.index+s[0].length-1;if(c>=e.length){console.warn(`fscss[parsing] Warning: Unexpected end of CSS after @event ${r} definition.`);continue}const i=extractBlock(e,c);if(0===i.length||"}"!==i[i.length-1]){console.warn(`fscss[parsing] Warning: Malformed block for @event '${r}'. Missing closing '}'.`);continue}e.slice(s.index,c+i.length);const l=parseConditionBlocks(i),a=t.split(",").map((e=>e.trim())).filter((e=>""!==e));n[r]&&console.warn(`fscss[definition] Warning: Duplicate @event definition for '${r}'. The last one will be used.`),n[r]={args:a,conditionBlocks:l},o.push([s.index,c+i.length])}for(let e=o.length-1;e>=0;e--){const[n,r]=o[e];t=t.slice(0,n)+t.slice(r)}return t=t.replace(/@event\.([\w-]+)\(([^)]*)\)/g,((e,r,s)=>{const t=n[r];if(!t)return console.warn(`fscss[call] Warning: @event function '${r}' not found during call.`),e;const o={},c=s.split(",").map((e=>e.trim())).filter((e=>""!==e));c.length!==t.args.length&&console.warn(`fscss[call] Warning: Argument count mismatch for @event '${r}'. Expected ${t.args.length}, got ${c.length}.`),t.args.forEach(((e,n)=>{void 0!==c[n]?o[e]=c[n]:console.warn(`fscss[call] Warning: Missing value for argument '${e}' in @event '${r}' call.`)}));let i="",l=!1,a=!1;for(const e of t.conditionBlocks)if("el"===e.type&&(a&&console.warn(`fscss[logic] Warning: Multiple 'el' (else) blocks found in @event '${r}'. Only the first 'el' block will be considered.`),a=!0),!l||"el"===e.type){if("el"===e.type){if(l)continue;l=!0}else{const n=e.condition.split(",").map((e=>e.trim())).filter((e=>""!==e));0===n.length?(console.warn(`fscss[logic] Warning: Empty condition in '${e.type}' block for @event '${r}'.`),l=!0):l=n.every((e=>{const n=e.match(/^(\w+)\s*(==|!=|>=|<=|>|<)\s*([^]+)$/);if(!n){const n=e.split(":").map((e=>e.trim()));if(2!==n.length)return console.warn(`fscss[logic] Warning: Malformed condition '${e}' in @event '${r}'. Expected 'variable operator value' or 'variable:value'.`),!1;const[s,t]=n;return s in o?o[s]===t:(console.warn(`fscss[logic] Warning: Condition variable '${s}' not provided in @event '${r}' context. Treating as false.`),!1)}{const[,e,s,t]=n;if(!(e in o))return console.warn(`fscss[logic] Warning: Condition variable '${e}' not provided in @event '${r}' context. Treating as false.`),!1;const c=o[e],i=isNaN(c)?c:Number(c),l=isNaN(t)?t:Number(t);switch(s){case"==":return i==l;case"!=":return i!=l;case">":return i>l;case"<":return i<l;case">=":return i>=l;case"<=":return i<=l;default:return!1}}}))}if(l){const n=e.block.match(/(\w+)\s*:\s*([^;]+);?/);n?i=n[2].trim():console.warn(`fscss[logic] Warning: No valid CSS property assignment found in matched block for @event '${r}'. Block content: '${e.block}'.`);break}}return!i&&t.conditionBlocks.length>0&&!l?console.warn(`fscss[call] Warning: No condition matched for @event '${r}' with provided arguments. Returning original call string.`):i||0!==t.conditionBlocks.length||console.warn(`fscss[definition] Warning: @event '${r}' has no condition blocks defined. Returning original call string.`),i||e})),t.trim()}function initlibraries(e){return e=(e=(e=e.replace(/exec\(\s*_init\sisjs\s*\)/g,"exec(https://cdn.jsdelivr.net/gh/fscss-ttr/FSCSS@main/xf/styles/isjs.fscss)")).replace(/exec\(\s*_init\sthemes\s*\)/g,"exec(https://cdn.jsdelivr.net/gh/fscss-ttr/FSCSS@main/xf/styles/trshapes.fthemes.fscss)")).replace(/exec\(_init\sarray1to500\s*\)/g,"exec(https://cdn.jsdelivr.net/gh/fscss-ttr/FSCSS@main/xf/styles/1to500.fscss)")}function procVar(e){return function(e){const n={},r=[],s=e.split("\n");let t=!1;const o={};for(let e=0;e<s.length;e++){let c=s[e].trim();if(c.includes("{")){t=!0,r.push(c);continue}if(c.includes("}")){t=!1;for(const e in o)delete o[e];r.push(c);continue}const i=/^\s*\$([a-zA-Z0-9_-]+)\s*:\s*([^;]+);/,l=c.match(i);if(l){const[,e,r]=l;t?o[e]=r.trim():n[e]=r.trim();continue}const a=/\$\/?([a-zA-Z0-9_-]+)(!)?/g;c=c.replace(a,((e,r)=>void 0!==o[r]?o[r]:void 0!==n[r]?n[r]:e)),r.push(c)}return{css:r.join("\n"),getVariable:function(e){return n[e]||null}}}(e).css}function procExt(e){let n={},r=e;return r=r.replace(/("(?:[^"\\]|\\.)*")|('(?:[^'\\]|\\.)*')/g,(function(e){let r=e[0],s=e.slice(1,-1);const t=/@ext\((-?\d+),(\d+):\s*([^)]+)\)/g;let o,c=[];for(;null!==(o=t.exec(s));)c.push({fullMatch:o[0],start:parseInt(o[1]),length:parseInt(o[2]),varName:o[3].trim(),index:o.index});for(let e=c.length-1;e>=0;e--){let r=c[e],t=r.start<0?s.length+r.start:r.start;t=Math.max(0,t);let o=s.substring(t,t+r.length);(t+r.length>s.length||t<0)&&console.warn(`fscss:[@ext]Warning: @ext directive for variable '${r.varName}' in string literal specifies an out-of-bounds range. Extraction may be incomplete or incorrect.`),void 0!==n[r.varName]&&console.warn(`fscss:[@ext]Warning: Duplicate variable name '${r.varName}' found in string literal. The last extracted value will be used.`),n[r.varName]=o,s=s.slice(0,r.index)+s.slice(r.index+r.fullMatch.length)}return r+s+r})),r=r.replace(/([#.\w-]+)\s*@ext\((-?\d+),(\d+):\s*([^)]+)\)/g,(function(e,r,s,t,o){s=parseInt(s),t=parseInt(t),o=o.trim();let c=s<0?r.length+s:s;c=Math.max(0,c);let i=r.substring(c,c+t);return(c+t>r.length||c<0)&&console.warn(`fscss:[@ext]Warning: @ext directive for variable '${o}' on token '${r}' specifies an out-of-bounds range. Extraction may be incomplete or incorrect.`),void 0!==n[o]&&console.warn(`fscss:[@ext]Warning: Duplicate variable name '${o}' found outside string literals. The last extracted value will be used.`),n[o]=i,r})),r=r.replace(/@ext\.(\w+)\!?/g,(function(e,r){return void 0===n[r]?(console.warn(`fscss:[@ext]Warning: Reference to undefined variable '@ext.${r}'. It will not be replaced.`),e):n[r]})),r}function procRan(e){return e.replace(/@random\(\[([^\]]+)\](?:, *ordered)?\)/g,((e,n)=>{const r=/, *ordered\)/.test(e),s=n.split(",").map((e=>e.trim()));if(0===s.length)return console.warn("fscss[@random] Warning: Empty array provided for @random. Returning empty string."),"";if(r){const e=s.join(":");orderedxFscssRandom[e]||(orderedxFscssRandom[e]={values:s,index:0},console.warn(`fscss[@random] Warning: New ordered sequence created for [${n}].`));const r=orderedxFscssRandom[e],t=r.values[r.index%r.values.length];return r.index>=r.values.length&&r.index%r.values.length==0&&console.warn(`fscss[@random] Warning: Ordered sequence [${n}] is looping back to the beginning.`),r.index++,t}return s[Math.floor(Math.random()*s.length)]}))}function procArr(e){const n=/@arr\(?\s*([\w\-_—0-9]+)\)?\[([^\]]+)\]\)?/g;let r;for(;null!==(r=n.exec(e));){const e=r[1],n=r[2].split(",").map((e=>e.trim()));arraysExfscss[e]=n}let s=e;return s=s.replace(/([^\{\}]+)\{\s*([^}]*@arr\.([\w\-_—0-9]+)\[\][^}]*)\s*\}/g,((e,n,r,s)=>{const t=arraysExfscss[s];return t?t.map(((e,t)=>{const o=n.replace(new RegExp(`@arr\\.${s}\\[\\]`,"g"),t+1),c=r.replace(new RegExp(`@arr\\.${s}\\[\\]`,"g"),e);return`${o.trim()} {\n  ${c.trim()}\n}`})).join("\n"):(console.warn(`fscss[@arr] Warning: Array '${s}' not found for loop processing.`),e)})),s=s.replace(/@arr\.([\w\-_—0-9]+)\[(\d+)\]/g,((e,n,r)=>{const s=parseInt(r)-1,t=arraysExfscss[n];return t?void 0!==t[s]?t[s]:e:(console.warn(`fscss[@arr] Warning: Array '${n}' not found.`),e)})),s=s.replace(/@arr\.([\w\-_—0-9]+)(?:\(([^)]*)\))?/g,((e,n,r)=>{const s=arraysExfscss[n];if(!s)return console.warn(`fscss[@arr] Warning: Array '${n}' not found for direct access.`),e;const t=void 0!==r&&""!==r?r:" ";return s.join(t)})),s.replace(n,"").replace(/\n{3,}/g,"\n\n").trim()}function procFun(e){const n={};function r(e){const n={},r=e.split(";");for(let e of r){if(e=e.trim(),!e)continue;const r=e.indexOf(":");if(-1===r){console.warn(`fscss[@fun] Invalid style line (missing colon): "${e}"`);continue}const s=e.substring(0,r).trim(),t=e.substring(r+1).trim();s?n[s]=t:console.warn(`fscss[@fun] Empty property name in line: "${e}"`)}return n}const s=/@fun\(([\w\-\_\—0-9]+)\)\s*\{([\s\S]*?)\}\s*/g;let t;for(;null!==(t=s.exec(e));){const e=t[1],s=t[2].trim();n[e]&&console.warn(`fscss[@fun] Duplicate @fun variable declaration: "${e}". The last one will overwrite previous declarations.`),n[e]={raw:s,props:r(s)}}let o=e;return o=o.replace(/@fun\.([\w\-\_\—0-9]+)\.([\w\-\_\—0-9]+)\.value\!?/g,((e,r,s)=>n[r]&&n[r].props[s]?n[r].props[s]:(console.warn(`fscss[@fun] Value extraction failed for "@fun.${r}.${s}.value". Variable or property not found.`),e))),o=o.replace(/@fun\.([\w\-\_\—0-9]+)\.([\w\-\_\—0-9]+)\!?/g,((e,r,s)=>n[r]&&n[r].props[s]?`${s}: ${n[r].props[s]};`:(console.warn(`fscss[@fun] Single property rule failed for "@fun.${r}.${s}". Variable or property not found.`),e))),o=o.replace(/@fun\.([\w\-\_\—0-9]+)(?=[\s;}])\!?/g,((e,r)=>n[r]?n[r].raw:(console.warn(`[@fun] Full variable block replacement failed for "@fun.${r}". Variable not found.`),e))),o=o.replace(/@fun\(([\w\-\_\d\—]+)\s*\{[\s\S]*?\}\s*/g,""),o=o.replace(/^\s*[\r\n]/gm,""),o=o.trim(),o}function flattenNestedCSS(e,n={}){const{preserveComments:r=!1,indent:s="  ",validate:t=!0,errorHandler:o=(e=>console.warn(e))}=n;function c(e){const[n,...r]=e.split(":").map((e=>e.trim()));return!t||/^(--|[\w-]+)$/.test(n)}function i(e,n,r=""){let t="",o=n;const c=[];let i="",p=!1,f=null,u=0;for(;o<e.length;){const n=e[o];if("\\"===n&&p)i+=n,o++,o<e.length&&(i+=e[o]),o++;else{if('"'!==n&&"'"!==n||p)if(n===f&&p)p=!1,f=null,i+=n;else if("{"!==n||p)if("}"!==n||p){if("@"===n&&!p&&0===u){const n=l(e,o);if(-1===n)break;t+=e.substring(o,n).trim()+"\n\n",o=n;continue}i+=n}else if(u--,0===u){const e=c.pop();if(!e)continue;let n="";n=e.selector.includes("&")?e.selector.replace(/&/g,e.parent):e.parent?`${e.parent} ${e.selector}`:e.selector;const r=a(i,n);(r.properties.length>0||r.keyframes.length>0)&&(t+=`${n} {\n`,r.properties.length>0&&(t+=s+r.properties.join(`;\n${s}`)+";\n"),t+=r.keyframes.join("\n"),t+="}\n\n"),t+=r.nestedBlocks,i=""}else i+=n;else{if(0===u){const e=i.trim();i="",c.push({selector:e,parent:r})}else i+=n;u++}else p=!0,f=n,i+=n;o++}}return{output:t,pos:o}}function l(e,n){let r=0,s=!1,t=null,o=n;for(;o<e.length;){const n=e[o];if("\\"===n&&s)o+=2;else{if('"'!==n&&"'"!==n||s)if(n===t&&s)s=!1,t=null;else if("{"!==n||s){if("}"===n&&!s&&(r--,0===r))return o+1}else r++;else s=!0,t=n;o++}}return-1}function a(e,n){const r={properties:[],nestedBlocks:"",keyframes:[]};let s="",a=!1,p=null,f=0,u=0;for(;u<e.length;){const $=e[u];if("\\"===$&&a)s+=$,u++,u<e.length&&(s+=e[u]),u++;else{if('"'!==$&&"'"!==$||a)if($===p&&a)a=!1,p=null,s+=$;else if("{"!==$||a){if("}"!==$||a)if(";"!==$||a||0!==f){if("@"===$&&!a&&0===f){const n=l(e,u);if(-1===n)break;const t=e.substring(u,n);r.keyframes.push(t.trim()),u=n,s="";continue}s+=$}else{const e=s.trim();e&&(c(e)?r.properties.push(e):t&&o(`Invalid property: ${e}`)),s=""}else if(f--,s+=$,0===f){const e=i(s,0,n).output;r.nestedBlocks+=e,s=""}}else f++,s+=$;else a=!0,p=$,s+=$;u++}}const $=s.trim();return $&&0===f&&(c($)?r.properties.push($):t&&o(`Invalid property: ${$}`)),r}r||(e=e.replace(/\/\*[\s\S]*?\*\//g,"").trim());return i(e,0).output}function procP(e){return e.replace(/%(\d+)\(([^[]+)\[\s*([^\]]+)\]\)/g,((e,n,r,s)=>{const t=r.split(",").map((e=>e.trim()));return t.length!=n?(console.warn(`Number of properties ${t.length} does not match %${n}`),e):t.map((e=>`${e}${s}`)).join("")}))}function transformCssValues(e){const n=new Set,r=e.replace(/(:\s*)(["']?)(.*?)(["']?)\s*copy\(([-]?\d+),\s*([^\;^\)^\(^,^ ]*)\)/g,((e,r,s,t,o,c,i)=>{const l=parseInt(c),a=i.replace(/[^a-zA-Z0-9_-]/g,"");let p="";return p=l>=0?t.substring(0,l):t.substring(t.length+l),n.add(`--${a}:${p};`),`${r}${s}${t}${o}`}));if(n.size>0){return r+`\n${`:root{${Array.from(n).join("\n")}\n}`}`}return r}function repeatString(e,n){return e.replace(/^['"]|['"]$/g,"").repeat(Math.max(0,parseInt(n)))}function replaceRe(e){const n=new Map;let r,s=e.replace(/(?:store|str|re)\(\s*([^:,]+)\s*[,:]\s*(?:"([^"]*)"|'([^']*)')\s*\)/gi,((e,r,s,t)=>{const o=s||t;return r=r.trim(),n.set(r,o),""}));if(0===n.size)return s;let t=0;let o=s;do{r=!1;for(const[e,s]of n.entries()){const n=new RegExp(`\\b${escapeRegExp(e)}\\b`,"g"),t=o.replace(n,s);t!==o&&(r=!0,o=t)}t++}while(r&&t<100);return t>=100&&console.warn("Maximum iterations reached. Possible circular dependency."),o}function escapeRegExp(e){return e.replace(/[.*+?^${}|[\]\\]/g,"\\$&")}function applyFscssTransformations(e){return e=(e=procP(e=e.replace(/(?:mxs|\$p)\((([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,\s*)?("([^"]*)"|'([^']*)')\)/gi,"$2:$14$15;$4:$14$15;$6:$14$15;$8:$14$15;$10:$14$15;$12:$14$15;").replace(/(?:mx|\$m)\((([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,)?(([^\,]*)\,\s*)?("([^"]*)"|'([^']*)')\)/gi,"$2$14$15$4$14$15$6$14$15$8$14$15$10$14$15$12$14$15").replace(/rpt\((\d+)\,\s*("([^"]*)"|'([^']*)')\)/gi,((e,n,r)=>repeatString(r,n))).replace(/\$(([\_\-\d\w]+)\:(\"[^\"]*\"|\'[^\']*\'|[^\;]*)\;)/gi,":root{--$1}").replace(/\$([^\!\s]+)!/gi,"var(--$1)").replace(/\$([\w\-\_\d]+)/gi,"var(--$1)").replace(/\-\*\-(([^\:]+)\:(\"[^\"]*\"|\'[^\']*\'|[^\;]*)\;)/gi,"-webkit-$1-moz-$1-ms-$1-o-$1").replace(/%i\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$21$4$21$6$21$8$21$10$21$12$21$14$21$16$21$18$21$20$21").replace(/%6\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$13$4$13$6$13$8$13$10$13$12$13").replace(/%5\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\]\[]*)\,)?(([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$11$4$11$6$11$8$11$10$11").replace(/%4\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$9$4$9$6$9$8$9").replace(/%3\((([^\,\[\]]*)\,)?(([^\,\[\]]*)\,)?(([^\,\[\]]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$7$4$7$6$7").replace(/%2\((([^\,\[\]]*)\,)?(([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$5$4$5").replace(/%1\((([^\,\]\[]*))?\s*\[([^\]\[]*)\]\)/gi,"$2$3"))).replace(/@import\(\s*\exec\((.*)(.{5})\)\s*\)/gi,'@import url("$1css")').replace(/\$\(\s*@keyframes\s*(\S+)\)/gi,"$1{animation-name:$1;}@keyframes $1").replace(/\$\(\s*(\@[\w\-\*]*)\s*([^\{\}\,&]*)(\s*,\s*[^\{\}&]*)?&?(\[([^\{\}]*)\])?\s*\)/gi,"$2$3{animation:$2 $5;}$1 $2").replace(/\$\(\s*--([^\{\}]*)\)/gi,"$1").replace(/\$\(([^\:]*):\s*([^\)\:]*)\)/gi,"[$1='$2']").replace(/g\(([^"'\s]*)\,\s*(("([^"]*)"|'([^']*)')\,\s*)?("([^"]*)"|'([^']*)')\s*\)/gi,"$1 $4$5$1 $7$8").replace(/\$\(([^\:]*):\s*([^\)\:]*)\)/gi,"[$1='$2']").replace(/\$\(([^\:^\)]*)\)/gi,"[$1]")}async function processImports(e,n=0,r=window.location.href){if(n>exfMAX_DEPTH)return console.warn(`fscss[@import] Warning: Maximum import depth (${exfMAX_DEPTH}) exceeded for base URL "${r}". Skipping further imports.`),e;const s=Array.from(e.matchAll(/@import\s*\(\s*exec\s*\(\s*((?:'[^']*'|"[^"]*"|[^'")]\S*)\s*)\)\s*\)/g));if(0===s.length)return e;const t=await Promise.all(s.map((async e=>{const[s,t]=e;let o,c=t.replace(/^['"](.*)['"]$/,"$1").trim();try{o=new URL(c,r).href;const e=await fetch(o);if(!e.ok)throw new Error(`HTTP ${e.status} for ${o}`);const s=await e.text();return await processImports(s,n+1,o)}catch(e){return console.error(`fscss[@import] Error: Failed to import "${c}" from "${r}":`,e),`/* fscss[@import] Error importing "${c}": ${e.message} */`}})));let o=0,c="";return s.forEach(((n,r)=>{c+=e.slice(o,n.index),c+=t[r],o=n.index+n[0].length})),c+=e.slice(o),console.log(`fscss[@import] Info: Finished processing imports at depth ${n}.`),c}async function procImp(e){try{return await processImports(e)}catch(n){return console.error("Processing failed:",n),console.warn("fscss[@import] Warning: can't resolve imports"),e}}async function processStyles(){const e=document.querySelectorAll("style");if(e.length)for(const n of e){let e=n.textContent;e.includes("exec.obj.block(all)")||(e.includes("exec.obj.block(init lab)")||(e=initlibraries(e)),e.includes("exec.obj.block(f import)")||(e=await procImp(e)),e.includes("exec.obj.block(store:before)")&&e.includes("exec.obj.block(store)")||(e=replaceRe(e)),e.includes("exec.obj.block(ext:before)")&&e.includes("exec.obj.block(ext)")||(e=procExt(e)),e.includes("exec.obj.block(f var)")||(e=procVar(e)),e.includes("exec.obj.block(fun)")||(e=procFun(e)),e.includes("exec.obj.block(arr)")||(e=procArr(e)),e.includes("exec.obj.block(event)")||(e=procEv(e)),e.includes("exec.obj.block(random)")||(e=procRan(e)),e.includes("exec.obj.block(copy)")||(e=transformCssValues(e)),e.includes("exec.obj.block(store:after)")&&e.includes("exec.obj.block(store)")||(e=replaceRe(e)),e.includes("exec.obj.block(num)")||(e=procNum(e)),e.includes("exec.obj.block(ext:after)")&&e.includes("exec.obj.block(ext)")||(e=procExt(e)),e.includes("exec.obj.block(t group)")||(e=applyFscssTransformations(e)),e.includes("exec.obj.block(debug)")||(e=procExC(e))),e=e.replace(/exec\.obj\.block\([^\)\n]*\)\;?/g,""),n.innerHTML=e}else console.warn("No <style> elements found.")}function processDrawElements(){document.querySelectorAll(".draw").forEach((e=>{const n=e.style.color||"#000";e.style.color="transparent",e.style.webkitTextStroke=`2px ${n}`}))}(async()=>{try{await processStyles(),await processDrawElements()}catch(e){console.error("Error processing styles or draw elements:",e)}})();
//#AUG 2025
